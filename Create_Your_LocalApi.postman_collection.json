{
	"info": {
		"_postman_id": "b832001c-b22c-4caf-906d-5b558ef20e6f",
		"name": "Create_Your_LocalApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13852941",
		"_collection_link": "https://www.postman.com/galactic-astronaut-894425/workspace/api-testing-postman/collection/13852941-b832001c-b22c-4caf-906d-5b558ef20e6f?action=share&source=collection_link&creator=13852941"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "GetRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status code 200.\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Verify the name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[2].name).to.eql(\"Mayur\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status code 201\", function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the User Created or not?\", function(){\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Check the User name in Created\", function(){\r",
									"    var jasonData = pm.response.json();\r",
									"\r",
									"    pm.collectionVariables.get(\"username\");\r",
									"    // pm.expect(jasonData.name).to.eqls(\"user\")\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const StringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"console.log(StringWithVars);\r",
									"\r",
									"pm.environment.set(\"username\", StringWithVars);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{name}}\",\r\n    \"age\":28\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status Code 200\", function(){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Check the name update or not?\", function(){\r",
									"    var jasonData = pm.response.json();\r",
									"    pm.expect(jasonData.name).to.eql(\"Sonu\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Sonu\",\r\n    \"age\":28\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status Code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/user/14",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"14"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "GetRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status code 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/student",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostRequest",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const fname = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"console.log(fname);\r",
									"\r",
									"pm.environment.set(\"fname\", fname);\r",
									"\r",
									"const lname = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
									"console.log(lname);\r",
									"pm.environment.set(\"lname\", lname);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\":\"{{fname}}\",\r\n\"lastname\":\"{{lname}}\",\r\n\"age\":26,\r\n\"averageScore\":9.6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/student",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"goldy\",\r\n\"lastname\": \"qa\",\r\n\"age\": 26,\r\n\"averageScore\": 9.6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/student/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"student",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PatchRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check the Status code 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"sheetal\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/student/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"student",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}